name: Docker CI/CD to Azure

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repository
      - uses: actions/checkout@v4

      # 2️⃣ Login to Azure CLI
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3️⃣ Create Azure Container Registry if not exists
      - name: Create ACR
        run: |
          az acr show --name myregistryaabuabdo --resource-group az400 || \
          az acr create --name myregistryaabuabdo --resource-group az400 --sku Basic --admin-enabled true

      # 4️⃣ Build and Push Docker image to ACR
      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./src/GithubCI.WebApi
          file: ./src/GithubCI.WebApi/Dockerfile
          push: true
          tags: myregistryaabuabdo.azurecr.io/myapp/my-image-name:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      # 1️⃣ Login to Azure CLI (required for deployment)
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 2️⃣ Deploy to Azure Container Instance
      - name: Deploy to Azure Container Instance
        run: |
          # Check if container exists
          if az container show --resource-group az400 --name my-container-instance &> /dev/null; then
            echo "Updating existing container..."
            az container update \
              --resource-group az400 \
              --name my-container-instance \
              --image myregistryaabuabdo.azurecr.io/myapp/my-image-name:latest
          else
            echo "Creating new container..."
            az container create \
              --resource-group az400 \
              --name my-container-instance \
              --image myregistryaabuabdo.azurecr.io/myapp/my-image-name:latest \
              --dns-name-label my-container-dns-label \
              --ports 8080 \
              --protocol TCP
          fi
