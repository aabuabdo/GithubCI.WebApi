name: Build and Deploy .NET App to IIS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:

      # 1️⃣ Checkout الكود
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # 3️⃣ Restore
      - name: Restore dependencies
        run: dotnet restore

      # 4️⃣ Build
      - name: Build project
        run: dotnet build --configuration Release --no-restore

      # 5️⃣ Test
      - name: Run tests
        run: dotnet test --no-build --verbosity normal

      # 6️⃣ Publish
      - name: Publish application
        run: dotnet publish -c Release -o ./publish

      # 7️⃣ Deploy to IIS - المُصحح 100%
      - name: Deploy to IIS
        shell: powershell
        run: |
          Import-Module WebAdministration
          
          $siteName = "MyApp"
          $physicalPath = "C:\inetpub\wwwroot\MyApp"
          $appPoolName = "MyAppPool"
          
          Write-Host "Starting deployment for $siteName" -ForegroundColor Green
          
          # Create folder if not exists
          if (-not (Test-Path $physicalPath)) {
              New-Item -Path $physicalPath -ItemType Directory -Force
              Write-Host "Created folder: $physicalPath" -ForegroundColor Yellow
          }
          
          # Create App Pool if not exists
          if (-not (Test-Path "IIS:\AppPools\$appPoolName")) {
              New-Item IIS:\AppPools\$appPoolName
              Write-Host "Created App Pool: $appPoolName" -ForegroundColor Yellow
          }
          
          # Create Site if not exists
          $siteExists = Get-ChildItem IIS:\Sites | Where-Object { $_.Name -eq $siteName }
          if (-not $siteExists) {
              New-Item -Path "IIS:\Sites\$siteName" -physicalPath $physicalPath -bindings @{protocol="http";bindingInformation="*:8080:"}
              Set-ItemProperty "IIS:\Sites\$siteName" -Name applicationPool -Value $appPoolName
              Write-Host "Created site: $siteName" -ForegroundColor Yellow
          }
          
          # Safe Stop with State Check
          Write-Host "Stopping services..." -ForegroundColor Cyan
          
          # App Pool
          try {
              $appPoolState = Get-WebAppPoolState -Name $appPoolName
              if ($appPoolState.Value -eq "Started") {
                  Stop-WebAppPool $appPoolName
                  Write-Host "Stopped App Pool: $appPoolName" -ForegroundColor Green
              } else {
                  Write-Host "App Pool already stopped: $appPoolName" -ForegroundColor Gray
              }
          } catch {
              Write-Host "App Pool not found or stopped: $appPoolName" -ForegroundColor Gray
          }
          
          # Website
          try {
              $siteState = Get-WebsiteState -Name $siteName
              if ($siteState.Value -eq "Started") {
                  Stop-Website $siteName
                  Write-Host "Stopped site: $siteName" -ForegroundColor Green
              } else {
                  Write-Host "Site already stopped: $siteName" -ForegroundColor Gray
              }
          } catch {
              Write-Host "Site not found or stopped: $siteName" -ForegroundColor Gray
          }
          
          Start-Sleep -Seconds 3
          
          # Copy files with Robocopy
          Write-Host "Copying files..." -ForegroundColor Cyan
          $robocopyResult = robocopy .\publish $physicalPath /MIR /NFL /NDL /NJH /NJS /nc /ns /np
          if ($LASTEXITCODE -le 3) {
              Write-Host "Files copied successfully" -ForegroundColor Green
          } else {
              Write-Host "Robocopy failed with exit code: $LASTEXITCODE" -ForegroundColor Red
              exit 1
          }
          
          # Safe Start
          Write-Host "Starting services..." -ForegroundColor Cyan
          
          Start-WebAppPool $appPoolName
          Write-Host "Started App Pool: $appPoolName" -ForegroundColor Green
          
          Start-Website $siteName
          Write-Host "Started site: $siteName" -ForegroundColor Green
          
          Write-Host "Deployment completed! Site available at: http://localhost:8080" -ForegroundColor Green
