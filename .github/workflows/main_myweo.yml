name: Build, Analyze, and Deploy to Azure

on:
  push:
    branches:
      - main123
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    name: Build, Test, and Analyze
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      # ✅ 1. Checkout source code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ✅ 2. Setup Java (required by SonarQube)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu"

      # ✅ 3. Setup .NET
      - name: Set up .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"

      # ✅ 4. Cache SonarQube files
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      # ✅ 5. Install SonarQube scanner (if not cached)
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path ${{ runner.temp }}\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ${{ runner.temp }}\scanner

      # ✅ 6. Begin SonarQube analysis
      - name: Begin SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          ${{ runner.temp }}\scanner\dotnet-sonarscanner begin /k:"aabuabdo_GithubCI.WebApi" /o:"aabuabdo" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      # ✅ 7. Build project
      - name: Build
        run: dotnet build --configuration Release

      # ✅ 8. Run tests
      - name: Run Tests
        run: dotnet test --configuration Release --no-build

      # ✅ 9. End SonarQube analysis
      - name: End SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          ${{ runner.temp }}\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      # ✅ 10. Publish app
      - name: dotnet publish
        run: dotnet publish -c Release -o "${{env.DOTNET_ROOT}}/myapp"

      # ✅ 11. Upload artifact for deploy job
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    name: Deploy to Azure
    runs-on: windows-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_BC48B404B3AE47188701F1A1C0742EAC }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D2D12B9FC4BC486988C959BF0D63C672 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_58FAE56FFCAE470DACE9B556321A6541 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: "myweo"
          slot-name: "Production"
          package: .

